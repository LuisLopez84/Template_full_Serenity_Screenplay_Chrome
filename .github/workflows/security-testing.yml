name: security-testing
# Este pipeline ejecuta las validaciones de seguridad de OWASP.
# IMPORTANTE: Este pipeline no se ejecuta de forma automática, para su ejecución se debe dar clic en Run-workflow desde Github

on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'URL objetivo para el escaneo de seguridad 002'
        required: true
        default: 'https://opensource-demo.orangehrmlive.com'
      zap_options:
        description: 'Opciones adicionales para ZAP'
        required: false
        default: '-t 60 -a'

env:
  ZAP_VERSION: '2.12.0'
  ZAP_PORT: '8080'
  ZAP_DIR: '/opt/zaproxy'

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: OWASP ZAP Security Scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip

      - name: Download and install OWASP ZAP
        run: |
          sudo mkdir -p $ZAP_DIR
          sudo chown $USER:$USER $ZAP_DIR
          wget "https://github.com/zaproxy/zaproxy/releases/download/v$ZAP_VERSION/ZAP_$ZAP_VERSION_Linux.tar.gz" -O zap.tar.gz
          tar -xzf zap.tar.gz -C $ZAP_DIR --strip-components=1
          echo "$ZAP_DIR" >> $GITHUB_PATH

      - name: Start ZAP in daemon mode
        run: |
          $ZAP_DIR/zap.sh -daemon \
            -port $ZAP_PORT \
            -host 0.0.0.0 \
            -config api.disablekey=true \
            -config database.recoverylog=false &
          sleep 15

      - name: Run ZAP Baseline Scan
        run: |
          $ZAP_DIR/zap-baseline.py \
          -t ${{ inputs.target_url }} \
          -j \
          -r zap_report.html \
          -w zap_report.md \
          ${{ inputs.zap_options }}

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-security-reports
          path: |
            zap_report.html
            zap_report.md
          if-no-files-found: warn

      - name: Check for critical findings
        run: |
          if grep -q "High" zap_report.html; then
            echo "::error::Se encontraron vulnerabilidades de alta prioridad"
            exit 1
          fi