package co.com.automation.testing.ui;

import net.serenitybdd.screenplay.targets.Target;

public class HomePage {

    private HomePage() { }

    public static final Target DASHBOARD_TEXT = Target.the("Mensaje de bienvenida")
            .locatedBy(".oxd-text.oxd-text--h6.oxd-topbar-header-breadcrumb-module");

}

/*
üìÑ Documentaci√≥n Clase: HomePage

üì¶ Paquete:

co.com.automation.testing.ui


---

üß† Descripci√≥n General:

La clase HomePage representa la pantalla de inicio o dashboard principal de la aplicaci√≥n despu√©s de un inicio de sesi√≥n exitoso. Define el elemento clave que confirma
que el usuario ha sido autenticado correctamente y ha accedido a la interfaz principal.

Esta clase sigue el patr√≥n Page Object Model (POM) y permite una clara separaci√≥n entre los objetos de la interfaz de usuario y la l√≥gica de automatizaci√≥n.


---

üß± Implementaci√≥n:

public class HomePage {

    private HomePage() { }

    public static final Target DASHBOARD_TEXT = Target.the("Mensaje de bienvenida")
            .locatedBy(".oxd-text.oxd-text--h6.oxd-topbar-header-breadcrumb-module");

}


---

üîç Elementos definidos:

Campo Descripci√≥n

DASHBOARD_TEXT Representa el texto del encabezado o m√≥dulo del dashboard que usualmente se muestra al iniciar sesi√≥n correctamente. Este texto se utiliza
como indicador visual de que el login fue exitoso y el usuario ha llegado a la p√°gina principal. Se localiza mediante un selector CSS.



---

üí° Notas T√©cnicas:

La clase tiene un constructor privado, lo que impide su instanciaci√≥n y refuerza su prop√≥sito como contenedor est√°tico de elementos.

El Target est√° localizado por un selector CSS, lo cual suele ser m√°s eficiente y robusto que usar XPath en este caso.

Es com√∫n usar este tipo de elemento como punto de validaci√≥n en una Question que confirme el acceso exitoso al sistema.



---

üéØ Ejemplo de uso en una Question:

Text.of(HomePage.DASHBOARD_TEXT).asString()

O como validaci√≥n:

theActorInTheSpotlight().should(seeThat(SuccessLogin.isSuccessful()));


---

‚úÖ Beneficios:

Claridad: El nombre DASHBOARD_TEXT refleja claramente el prop√≥sito del elemento.

Centralizaci√≥n: Agrupar los elementos en una clase espec√≠fica permite que los cambios de UI se manejen f√°cilmente sin tocar la l√≥gica de los pasos o tareas.

Facilita las pruebas de regresi√≥n: Tener este tipo de elementos bien definidos ayuda a detectar fallas funcionales en la navegaci√≥n despu√©s del login.
 */


